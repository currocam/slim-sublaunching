initialize() {
	initializeTreeSeq();
	initializeMutationRate(0);
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, L);
	initializeRecombinationRate(RHO);
	// This code assumes a popSizes matrix exist. 
	// This matrix contains one row per population
	// and one row per generation.
	defineConstant("nPops", nrow(popSizes));
	defineConstant("RUNTIME", ncol(popSizes));
}
1 early() {
	for (i in seqLen(nPops))
		sim.addSubpop(i, popSizes[i, 0]);
}
2: early() {
	for (i in seqLen(nPops))
		sim.subpopulations[i].setSubpopulationSize(popSizes[i, sim.cycle]);
}
(RUNTIME-1) late() {
	sim.treeSeqOutput(OUTFILE);
}
